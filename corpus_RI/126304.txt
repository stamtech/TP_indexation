In 1995, Graham and Robert Morris founded Viaweb, the first application service provider (ASP). Viaweb's software, originally written mostly in Common Lisp, allowed users to make their own Internet stores. In the summer of 1998 Viaweb was sold to Yahoo! for 455,000 shares of Yahoo! stock, valued at $49.6 million. At Yahoo! the product became Yahoo! Store.
He has since begun writing essays for his popular website paulgraham.com. They range from "", which compares Lisp to other programming languages and introduced the word Blub, to "", a discussion of nerd life in high school. A collection of his essays has been published as ''Hackers & Painters'' (ISBN 0-596-00662-4) by O'Reilly.
In 2005, after giving a talk at the Harvard Computer Society later published as , Graham along with Trevor Blackwell, Jessica Livingston and Robert Morris started Y Combinator to provide seed funding to startups, particularly those started by younger, more technically-oriented founders. Y Combinator has now invested in 208 startups, including reddit, Justin.tv, loopt and Xobni.
BusinessWeek included Paul Graham in 2008 edition of its annual feature, ''The 25 Most Influential People on the Web''.
Graham has a B.A.  from Cornell. He earned an M.S. and a Ph.D. in Applied Sciences (specializing in computer science) from Harvard in 1988 and 1990 respectively , and studied painting at Rhode Island School of Design and the Accademia di Belle Arti in Florence.
In 2008, Paul Graham married Jessica Livingston.
In 2001, Paul Graham  that he was working on a new dialect of Lisp named "Arc". Over the years since, he has written several essays describing features or goals of the language, and some internal projects at Y Combinator have been written in Arc, most notably the Hacker News web forum and news aggregator program.
In the essay  Graham describes a few of his goals for the language. While many of the goals are very general ("Arc should be hackable," "there should be good libraries"), he did give some specifics. For instance, he believes that it is important for a language to be terse:
He also stated that it is better for a language to only implement a small number of "axioms", even when that means the language may not have features that large organizations want, such as object-orientation (OO). In fact, Graham feels that OO is not useful as its methods and patterns are just "good design", and he sees the language features used to implement OO as partially mistaken.
A controversy among Lisp programmers is whether, and how much, the S-expressions of the language should be complemented by other forms of syntax. Graham feels that additional syntax should be used in situations where pure S-expressions would be overly verbose, saying, "I don't think we should be religiously opposed to introducing syntax into Lisp." Graham also feels that efficiency problems should be solved by giving the programmer a good profiler.
The first publicly released version of Arc was made available on Tuesday, 29 January 2008. The release comes in the form of a .tar archive, containing the mzscheme source code for Arc. A  and a  are also available. The forum is copied from news.ycombinator.com and is written itself in Arc.
The initial version has caused some controversy, notably by only supporting the ASCII character set, and by shipping with a built-in web application library that bases its layout on HTML tables. This, combined with the hype surrounding Arc and its generally slow development pace, has gathered some unfavorable comments.
Blub is a hypothetical programming language; it is an average language "right in the middle of the abstractness continuum. It is not the most powerful language, but it is more powerful than Cobol or machine language.".
As long as our hypothetical Blub programmer is looking down the power continuum, he knows he's looking down.  Languages less powerful than Blub are obviously less powerful, because they're missing some feature he's used to.  But when our hypothetical Blub programmer looks in the other direction, up the power continuum, he doesn't realize he's looking up.  What he sees are merely weird languages.  He probably considers them about equivalent in power to Blub, but with all this other hairy stuff thrown in as well.  Blub is good enough for him, because he thinks in Blub.
When we switch to the point of view of a programmer using any of the languages higher up the power continuum, however, we find that he in turn looks down upon Blub.  How can you get anything done in Blub? It doesn't even have y.
By induction, the only programmers in a position to see all the differences in power between the various languages are those who understand the most powerful one.  (This is probably what Eric Raymond meant about Lisp making you a better programmer.) You can't trust the opinions of the others, because of the Blub paradox: they're satisfied with whatever language they happen to use, because it dictates the way they think about programs."
The concept has been cited by writers such as Joel Spolsky.
In 2002, Graham published an essay entitled "", in which he advocated using a Naive Bayes classifier to identify spam.